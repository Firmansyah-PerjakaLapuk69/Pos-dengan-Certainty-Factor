<!DOCTYPE html>
<html lang="en">
<head>   
    <%- include('partials/head') %>  <!-- Include the head partial -->     
</head>
<body>

<!-- Sidebar -->
<%- include('partials/sidebar') %>

<!-- Main Content -->
<div class="content">

<!-- Top Buttons -->
<div class="d-flex justify-content-between align-items-center mb-3">
    <div>
        <button class="btn btn-outline-primary me-2" onclick="toggleSidebar()">
            <i class="fa fa-bars"></i>
        </button>
        <button class="btn btn-outline-secondary" onclick="toggleDarkMode()">
            <i class="fa fa-moon"></i>
        </button>
    </div>
        <button class="btn btn-primary" data-bs-toggle="modal" data-bs-target="#addTransactionModal">
            <i class="fa fa-plus"></i> Add Transaction Items
        </button>
    </div>
    
    <!-- Search Input for Transaction Items -->
    <div class="mb-3">
        <input 
            type="text" 
            class="form-control" 
            id="transactionSearchInput" 
            placeholder="Cari berdasarkan ID Transaksi, Produk, atau Batch" 
            onkeyup="searchTransactionItems()">
    </div>

<!-- Modal -->
<div class="modal fade" id="addTransactionModal" tabindex="-1" aria-labelledby="addTransactionModalLabel" aria-hidden="true">
    <div class="modal-dialog modal-lg">
        <div class="modal-content">     
            <form id="transactionForm">
                <div class="modal-header">
                    <h5 class="modal-title" id="addTransactionModalLabel">Add Transaction Items</h5>
                    <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
                </div>
                <div class="modal-body">
                <!-- Transaction Info -->
                <div class="mb-3">
                    <label for="id_transactions" class="form-label">Transaction ID</label>
                    <select id="id_transactions" class="form-select" required>
                        <option value="" disabled selected>Select Transaction</option>
                        <% transactions.forEach(tx => { %>
                        <option value="<%= tx.id_transactions %>"><%= tx.id_transactions %></option>
                        <% }); %>
                    </select>
                </div>
                <div class="mb-3">
                    <label for="user_id" class="form-label">User</label>
                    <select id="user_id" class="form-select" required>
                        <option value="" disabled selected>Select User</option>
                        <% users.forEach(user => { %>
                        <option value="<%= user.id_users %>"><%= user.name %></option>
                        <% }); %>
                    </select>
                </div>
                <hr>
                <!-- Items Container -->
                <div id="itemsContainer">
                    <div class="item-group border rounded p-3 mb-3">
                        <div class="row g-3">
                        <div class="col-md-3">
                            <label class="form-label">Product</label>
                            <select class="form-select item-product" required onchange="loadBatches(this)">
                            <option value="" disabled selected>Select Product</option>
                            <% products.forEach(p => { %>
                                <option value="<%= p.id_products %>"><%= p.name %></option>
                            <% }); %>
                            </select>
                        </div>

                        <div class="col-md-3">
                            <label class="form-label">Batch</label>
                            <select class="form-select item-batch" required onchange="updatePrice(this)">
                            <option value="" disabled selected>Select Batch</option>
                            </select>
                        </div>

                        <div class="col-md-2">
                        <label class="form-label">Qty</label>
                        <input type="number" class="form-control item-qty" min="1" onchange="updateSubtotal(this)" required>
                    </div>

                    <div class="col-md-2">
                        <label class="form-label">Price</label>
                        <input type="number" class="form-control item-price" step="0.01" readonly required>
                        <small class="text-muted formatted-price"></small>
                    </div>

                    <div class="col-md-2">
                        <label class="form-label">Discount (%)</label>
                        <input type="number" class="form-control item-discount" min="0" max="100" value="0" onchange="updateSubtotal(this)" required>
                    </div>

                    <div class="col-md-2">
                        <label class="form-label">Subtotal</label>
                        <input type="number" class="form-control item-subtotal" step="0.01" readonly required>
                        <small class="text-muted formatted-subtotal"></small>
                    </div>
                        </div>
                    </div>
                </div>

                <!-- Add Item Button -->
                <div class="mb-4">
                    <button type="button" class="btn btn-outline-primary w-100" id="addItemBtn">
                        + Add Another Item
                    </button>
                </div>
                <hr>
                <!-- Payment Section -->
                <div class="mb-3 row">
                    <label for="total_price" class="col-sm-4 col-form-label">Total Price</label>
                    <div class="col-sm-8">
                        <input type="number" id="total_price" class="form-control" step="0.01" readonly value="0">
                        <small class="text-muted" id="formatted_total_price"></small>
                    </div>
                </div>
                <div class="mb-3 row">
                    <label for="payment_amount" class="col-sm-4 col-form-label">Payment Amount</label>
                    <div class="col-sm-8">
                        <input type="number" id="payment_amount" class="form-control" step="0.01" min="0" required>
                        <small class="text-muted" id="formatted_payment_amount"></small>
                    </div>
                </div>
                <div class="mb-3 row">
                    <label for="change_amount" class="col-sm-4 col-form-label">Change Amount</label>
                    <div class="col-sm-8">
                        <input type="number" id="change_amount" class="form-control" step="0.01" readonly value="0">
                        <small class="text-muted" id="formatted_change_amount"></small>
                    </div>
                </div>

                <div class="mb-3 row">
                    <label for="payment_method" class="col-sm-4 col-form-label">Payment Method</label>
                    <div class="col-sm-8">
                        <select id="payment_method" class="form-select" required>
                        <option value="" disabled selected>Select Payment Method</option>
                        <option value="cash">Cash</option>
                        <option value="credit_card">Credit Card</option>
                        <option value="transfer">Transfer</option>
                        </select>
                    </div>
                </div>
                </div>

                <!-- Modal Footer -->
                <div class="modal-footer">
                    <div class="me-auto text-danger" id="payment-warning" style="display: none;">
                        Jumlah pembayaran kurang dari total harga.
                    </div>
                        <button type="submit" class="btn btn-success" id="submit-btn" disabled>Submit</button>
                        <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cancel</button>
                </div>
            </form>

            </div>
        </div>
    </div>

    <!-- Transaction Items List Section -->
    <div class="table-responsive mt-4">
        <h5 class="mb-3">Daftar Item Transaksi</h5>
        <table class="table table-striped table-hover">
            <thead class="table-dark">
                <tr>
                    <th>ID Transaksi</th>
                    <th>Produk</th>
                    <th>Batch</th>
                    <th>Qty</th>
                    <th>Harga</th>
                    <th>Discount (%)</th> <!-- Tambahan -->
                    <th>Subtotal</th>
                </tr>
            </thead>
            <tbody id="transactionList">
                <% items.forEach(item => { %>
                    <tr class="transaction-row">
                        <td><%= item.id_transactions %></td>
                        <td><%= item.product_name %></td>
                        <td><%= item.batch_number %></td>
                        <td><%= item.quantity %></td>
                        <td><%= new Intl.NumberFormat('id-ID', { style: 'currency', currency: 'IDR', minimumFractionDigits: 0 }).format(item.price) %></td>
                        <td><%= new Intl.NumberFormat('id-ID', { style: 'currency', currency: 'IDR', minimumFractionDigits: 0 }).format(item.discount_amount) %></td>
                        <td><%= new Intl.NumberFormat('id-ID', { style: 'currency', currency: 'IDR', minimumFractionDigits: 0 }).format(item.subtotal) %></td>
                    </tr>
                <% }) %>
            </tbody>
        </table>
    </div>

    <!-- Pagination -->
    <div class="d-flex justify-content-between align-items-center mb-3">
        <div class="d-flex align-items-center">
            <label for="limitSelect" class="mr-3">Show:</label>
            <select id="limitSelect" class="form-control d-inline-block w-auto" onchange="updateLimit()">
                <option value="5">5</option>
                <option value="10" selected>10</option>
                <option value="20">20</option>
                <option value="50">50</option>
            </select>
        </div>
        <nav aria-label="Page navigation">
            <ul class="pagination justify-content-center" id="pagination">
                <li class="page-item" id="previousPage">
                    <a class="page-link" href="#" aria-label="Previous">
                        <span aria-hidden="true">&laquo;</span>
                    </a>
                </li>
                <!-- Pagination buttons injected here -->
                <li class="page-item" id="nextPage">
                    <a class="page-link" href="#" aria-label="Next">
                        <span aria-hidden="true">&raquo;</span>
                    </a>
                </li>
            </ul>
        </nav>
    </div>

</div>

<!-- Script bagian bawah -->
<script>

function formatRupiah(angka) {
    return new Intl.NumberFormat('id-ID', { style: 'currency', currency: 'IDR' }).format(angka);
}

function loadBatches(selectElement) {
    const productId = selectElement.value;
    const group = selectElement.closest('.item-group');
    const batchSelect = group.querySelector('.item-batch');
    batchSelect.innerHTML = '<option value="" disabled selected>Loading...</option>';

    fetch(`/transaction_items/batches/${productId}`)
    .then(res => res.json())
    .then(batches => {
        batchSelect.innerHTML = '<option value="" disabled selected>Select Batch</option>';
        batches.forEach(b => {
            const option = document.createElement('option');
            option.value = b.id_product_batches;
            option.dataset.price = b.selling_price;
            option.dataset.stock = b.stock;

            if (b.stock === 0) {
                option.textContent = `${b.batch_number} - Stok habis, pilih batch lain`;
                option.disabled = true;
                option.classList.add('text-danger'); // Optional: style merah
            } else {
                option.textContent = `${b.batch_number} (Stok: ${b.stock})`;
            }
            batchSelect.appendChild(option);
        });
    });
}

function updatePrice(selectElement) {
    const group = selectElement.closest('.item-group');
    const selected = selectElement.selectedOptions[0];
    const price = parseFloat(selected.dataset.price) || 0;
    group.querySelector('.item-price').value = price.toFixed(2);
    group.querySelector('.formatted-price').textContent = formatRupiah(price);

    // Reset diskon saat produk/batch berubah
    group.querySelector('.item-discount').value = 0;

    updateSubtotal(group.querySelector('.item-qty'));
}

function updateSubtotal(element) {
    const group = element.closest('.item-group');
    const qty = parseFloat(group.querySelector('.item-qty').value) || 0;
    const price = parseFloat(group.querySelector('.item-price').value) || 0;
    const discountPercent = parseFloat(group.querySelector('.item-discount').value) || 0;

    // Hitung diskon dalam nilai rupiah
    const discountAmount = (price * discountPercent) / 100;
    const priceAfterDiscount = price - discountAmount;

    const subtotal = qty * priceAfterDiscount;
    group.querySelector('.item-subtotal').value = subtotal.toFixed(2);
    group.querySelector('.formatted-subtotal').textContent = formatRupiah(subtotal);

    updateTotalPrice();
}

function updateTotalPrice() {
    const subtotals = document.querySelectorAll('.item-subtotal');
    let total = 0;
    subtotals.forEach(input => {
        total += parseFloat(input.value) || 0;
    });
    document.getElementById('total_price').value = total.toFixed(2);
    document.getElementById('formatted_total_price').textContent = formatRupiah(total);
    updateChangeAmount();
}

function updateChangeAmount() {
    const payment = parseFloat(document.getElementById('payment_amount').value) || 0;
    const total = parseFloat(document.getElementById('total_price').value) || 0;
    const change = payment - total;
    const warningText = document.getElementById('payment-warning');
    const submitBtn = document.getElementById('submit-btn');

    document.getElementById('change_amount').value = change.toFixed(2);
    document.getElementById('formatted_change_amount').textContent = formatRupiah(change);
    document.getElementById('formatted_payment_amount').textContent = formatRupiah(payment);

        if (payment < total) {
            warningText.style.display = 'block';
            submitBtn.disabled = true;
        } else {
            warningText.style.display = 'none';
            submitBtn.disabled = false;
        }
}

document.getElementById('payment_amount').addEventListener('input', updateChangeAmount);

document.getElementById('addItemBtn').addEventListener('click', () => {
    const container = document.getElementById('itemsContainer');
    const first = container.querySelector('.item-group');
    const clone = first.cloneNode(true);

    // Reset input values & formatted texts
    clone.querySelectorAll('input').forEach(input => input.value = '');
    clone.querySelectorAll('select').forEach(select => select.selectedIndex = 0);
    clone.querySelector('.formatted-price').textContent = '';
    clone.querySelector('.formatted-subtotal').textContent = '';

    container.appendChild(clone);
});

document.getElementById('transactionForm').addEventListener('submit', async (e) => {
e.preventDefault();

    const id_transactions = document.getElementById('id_transactions').value;
    const user_id = document.getElementById('user_id').value;
    const itemGroups = document.querySelectorAll('.item-group');
    const items = [];

    itemGroups.forEach(group => {
        const price = parseFloat(group.querySelector('.item-price').value) || 0;
        const discountPercent = parseFloat(group.querySelector('.item-discount').value) || 0;
        const discountAmount = (price * discountPercent) / 100;

    items.push({
        id_products: group.querySelector('.item-product').value,
        id_product_batches: group.querySelector('.item-batch').value,
        quantity: parseInt(group.querySelector('.item-qty').value),
        price: price,
        discount_amount: discountAmount
        });
    });

    const status = "paid"; // Status tetap paid
    const payment_amount = parseFloat(document.getElementById('payment_amount').value);
    const change_amount = parseFloat(document.getElementById('change_amount').value);
    const payment_method = document.getElementById('payment_method').value;

    const res = await fetch('/transaction_items', {
        method: 'POST',
        headers: { 'Content-Type': 'application/json' },
        body: JSON.stringify({ 
        id_transactions,
        user_id, 
        items,
        status,
        payment_amount,
        change_amount,
        payment_method
        })
});

    const result = await res.json();

if (res.ok) {
    const modal = bootstrap.Modal.getInstance(document.getElementById('addTransactionModal'));
    
    modal.hide();
    if (confirm(`${result.message}\n\nCetak bukti transaksi sekarang?`)) {
        window.open(`/transaction_items/receipt/${id_transactions}`, '_blank');
    } else {
            location.reload();
    }
    }
});
</script>

<!-- Bootstrap JS -->        
<script src="js/scriptTransaction_items.js"></script>
<script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>
